#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML –æ—Ç—á–µ—Ç–æ–≤ pytest (–∫—Ä–æ—Å—Å-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π)
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python generate_report.py [—É—Ä–æ–≤–µ–Ω—å]
"""

import sys
import subprocess
import os
from pathlib import Path

def run_command(cmd):
    """–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã pytest"""
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        print(result.stdout)
        if result.stderr:
            print(result.stderr)
        return result.returncode == 0
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        return False

def main():
    print("üöÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞ pytest...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É reports –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    Path("reports").mkdir(exist_ok=True)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    level = sys.argv[1] if len(sys.argv) > 1 else ""
    
    if level == "":
        print("üìä –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤...")
        cmd = "pytest --html=reports/report.html --self-contained-html"
    elif level == "level0":
        print("üü¶ –ó–∞–ø—É—Å–∫ Level 0 (–û—Å–Ω–æ–≤—ã Python)...")
        cmd = "pytest -m level0 --html=reports/report_level0.html --self-contained-html"
    elif level == "level1":
        print("üü¢ –ó–∞–ø—É—Å–∫ Level 1 (–ü—Ä–∏–º–µ—Ä—ã)...")
        cmd = "pytest -m level1 --html=reports/report_level1.html --self-contained-html"
    elif level == "level2":
        print("üü° –ó–∞–ø—É—Å–∫ Level 2 (–ü—Ä–æ—Å—Ç—ã–µ TODO)...")
        cmd = "pytest -m level2 --html=reports/report_level2.html --self-contained-html"
    elif level == "level3":
        print("üü† –ó–∞–ø—É—Å–∫ Level 3 (–°—Ä–µ–¥–Ω–∏–µ TODO)...")
        cmd = "pytest -m level3 --html=reports/report_level3.html --self-contained-html"
    elif level == "level4":
        print("üî¥ –ó–∞–ø—É—Å–∫ Level 4 (–°–ª–æ–∂–Ω—ã–µ TODO)...")
        cmd = "pytest -m level4 --html=reports/report_level4.html --self-contained-html"
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å: {level}")
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Ä–æ–≤–Ω–∏: level0, level1, level2, level3, level4")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º pytest
    success = run_command(cmd)
    
    if success:
        print("‚úÖ –û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤! –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª reports/report*.html –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –æ—Ç—á–µ—Ç—É
        report_files = list(Path("reports").glob("*.html"))
        if report_files:
            latest_report = max(report_files, key=os.path.getmtime)
            print(f"üìÇ –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á–µ—Ç: {latest_report}")
    else:
        print("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞")
        sys.exit(1)

if __name__ == "__main__":
    main() 