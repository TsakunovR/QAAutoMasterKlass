"""
üü° LEVEL 2: –ü—Ä–æ—Å—Ç—ã–µ TODO –∑–∞–¥–∞–Ω–∏—è

–î–æ–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π –∫–æ–¥ –≤ –º–µ—Å—Ç–∞—Ö —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ TODO.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ Level 1 –∫–∞–∫ –æ–±—Ä–∞–∑–µ—Ü.

–ó–∞–ø—É—Å–∫: pytest tests/test_level2_simple_todos.py -v
"""
import pytest
from utils.api_client import APIClient


class TestLevel2SimpleTodos:
    """–ü—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"""
    
    def setup_method(self):
        """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º"""
        self.client = APIClient()
    
    @pytest.mark.level2
    def test_get_pet_by_id(self):
        """
        TODO: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∏—Ç–æ–º—Ü–µ –ø–æ ID
        
        –ü–æ–¥—Å–∫–∞–∑–∫–∏:
        - –≠–Ω–¥–ø–æ–∏–Ω—Ç: /pet/{petId}
        - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ pet_id = 1 –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∫–æ–¥ –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
        """
        pet_id = 1
        
        # TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å GET –∑–∞–ø—Ä–æ—Å –Ω–∞ /pet/{pet_id}
        # response = self.client.get(f"/pet/{pet_id}")
        
        # TODO: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Å—Ç–∞—Ç—É—Å –∫–æ–¥ 200 –∏–ª–∏ 404
        # assert response.status_code in [200, 404]
        
        # TODO: –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 200, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è id –∏ name
        # if response.status_code == 200:
        #     pet = response.json()
        #     assert "id" in pet
        #     assert "name" in pet
        #     print(f"\\n–ü–∏—Ç–æ–º–µ—Ü –Ω–∞–π–¥–µ–Ω: {pet.get('name')}")
        
        pass  # –£–¥–∞–ª–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –∫–æ–≥–¥–∞ –Ω–∞–ø–∏—à–µ—Ç–µ –∫–æ–¥
    
    @pytest.mark.level2
    def test_find_pets_by_different_status(self):
        """
        TODO: –ù–∞–π—Ç–∏ –ø–∏—Ç–æ–º—Ü–µ–≤ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "pending"
        
        –ü–æ–¥—Å–∫–∞–∑–∫–∏:
        - –≠–Ω–¥–ø–æ–∏–Ω—Ç: /pet/findByStatus
        - –ü–∞—Ä–∞–º–µ—Ç—Ä: status="pending"
        - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–∏—Ç–æ–º—Ü—ã –∏–º–µ—é—Ç —Å—Ç–∞—Ç—É—Å "pending"
        """
        
        # TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å GET –∑–∞–ø—Ä–æ—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º status="pending"
        # response = self.client.get("/pet/findByStatus", params={"status": "pending"})
        
        # TODO: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–¥ 200
        # assert response.status_code == 200
        
        # TODO: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∏—Ç–æ–º—Ü–µ–≤ –∏–∑ JSON –æ—Ç–≤–µ—Ç–∞
        # pets = response.json()
        
        # TODO: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –æ—Ç–≤–µ—Ç - —ç—Ç–æ —Å–ø–∏—Å–æ–∫
        # assert isinstance(pets, list)
        
        # TODO: –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∏—Ç–æ–º—Ü—ã, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —É –≤—Å–µ—Ö —Å—Ç–∞—Ç—É—Å "pending"
        # for pet in pets:
        #     assert pet.get("status") == "pending", f"–ü–∏—Ç–æ–º–µ—Ü {pet.get('name')} –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å {pet.get('status')}"
        
        pass  # –£–¥–∞–ª–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –∫–æ–≥–¥–∞ –Ω–∞–ø–∏—à–µ—Ç–µ –∫–æ–¥
    
    @pytest.mark.level2  
    def test_get_user_by_username(self):
        """
        TODO: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ –∏–º–µ–Ω–∏
        
        –ü–æ–¥—Å–∫–∞–∑–∫–∏:
        - –≠–Ω–¥–ø–æ–∏–Ω—Ç: /user/{username}
        - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ username = "user1" –¥–ª—è —Ç–µ—Å—Ç–∞
        - –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å–ª—É—á–∞–∏ –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
        """
        username = "user1"
        
        # TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å GET –∑–∞–ø—Ä–æ—Å –Ω–∞ /user/{username}
        # response = self.client.get(f"/user/{username}")
        
        # TODO: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Å—Ç–∞—Ç—É—Å –∫–æ–¥ 200 (–Ω–∞–π–¥–µ–Ω) –∏–ª–∏ 404 (–Ω–µ –Ω–∞–π–¥–µ–Ω)
        # assert response.status_code in [200, 404]
        
        # TODO: –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω (—Å—Ç–∞—Ç—É—Å 200), –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
        # if response.status_code == 200:
        #     user = response.json()
        #     assert "username" in user
        #     assert "email" in user
        #     print(f"\\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.get('username')}")
        # else:
        #     print(f"\\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        pass  # –£–¥–∞–ª–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –∫–æ–≥–¥–∞ –Ω–∞–ø–∏—à–µ—Ç–µ –∫–æ–¥
    
    @pytest.mark.level2
    def test_find_pets_by_tags(self):
        """
        TODO: –ù–∞–π—Ç–∏ –ø–∏—Ç–æ–º—Ü–µ–≤ –ø–æ —Ç–µ–≥–∞–º
        
        –ü–æ–¥—Å–∫–∞–∑–∫–∏:
        - –≠–Ω–¥–ø–æ–∏–Ω—Ç: /pet/findByTags  
        - –ü–∞—Ä–∞–º–µ—Ç—Ä: tags=["tag1", "tag2"]
        - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
        """
        
        # TODO: –û—Ç–ø—Ä–∞–≤–∏—Ç—å GET –∑–∞–ø—Ä–æ—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º tags
        # –î–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ø–∏—Å–æ–∫
        # response = self.client.get("/pet/findByTags", params={"tags": ["tag1", "tag2"]})
        
        # TODO: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–¥ (200 –∏–ª–∏ 400)
        # assert response.status_code in [200, 400]
        
        # TODO: –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 200, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –æ—Ç–≤–µ—Ç - —ç—Ç–æ —Å–ø–∏—Å–æ–∫
        # if response.status_code == 200:
        #     pets = response.json()
        #     assert isinstance(pets, list)
        #     print(f"\\n–ù–∞–π–¥–µ–Ω–æ –ø–∏—Ç–æ–º—Ü–µ–≤ –ø–æ —Ç–µ–≥–∞–º: {len(pets)}")
        
        pass  # –£–¥–∞–ª–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –∫–æ–≥–¥–∞ –Ω–∞–ø–∏—à–µ—Ç–µ –∫–æ–¥


# BONUS TODO: –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç
class TestLevel2Bonus:
    """–ë–æ–Ω—É—Å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ: —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π —Ç–µ—Å—Ç"""
    
    def setup_method(self):
        self.client = APIClient()
    
    @pytest.mark.level2
    def test_your_own_test(self):
        """
        TODO: –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç
        
        –ò–¥–µ–∏:
        - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç /user/logout —Ä–∞–±–æ—Ç–∞–µ—Ç
        - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ ID (/store/order/{orderId})
        - –õ—é–±–æ–π –¥—Ä—É–≥–æ–π GET —ç–Ω–¥–ø–æ–∏–Ω—Ç –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        """
        pass  # –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å 